<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>